<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>